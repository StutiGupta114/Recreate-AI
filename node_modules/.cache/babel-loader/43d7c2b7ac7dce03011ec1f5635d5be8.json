{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sgstu\\\\recreate_ai_app\\\\src\\\\Components\\\\Audio.jsx\";\nimport React from 'react';\nimport { render } from '@testing-library/react';\n\nclass Audio extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      play: false\n    };\n    this.audio = new Audio();\n\n    this.togglePlay = () => {\n      this.setState({\n        play: !this.state.play\n      }, () => {\n        this.state.play ? this.audio.play() : this.audio.pause();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.audio.addEventListener('ended', () => this.setState({\n      play: false\n    }));\n  }\n\n  componentWillUnmount() {\n    this.audio.removeEventListener('ended', () => this.setState({\n      play: false\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.audio.previewURL, React.createElement(\"button\", {\n      onClick: this.togglePlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.state.play ? 'Pause' : 'Play'));\n  }\n\n}\n\nexport default Audio;","map":{"version":3,"sources":["C:/Users/sgstu/recreate_ai_app/src/Components/Audio.jsx"],"names":["React","render","Audio","Component","state","play","audio","togglePlay","setState","pause","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","props","previewURL"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACJC,MAAAA,IAAI,EAAE;AADF,KADwB;AAAA,SAI9BC,KAJ8B,GAItB,IAAIJ,KAAJ,EAJsB;;AAAA,SAc9BK,UAd8B,GAcjB,MAAM;AACjB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAApB,OAAd,EAA0C,MAAM;AAC9C,aAAKD,KAAL,CAAWC,IAAX,GAAkB,KAAKC,KAAL,CAAWD,IAAX,EAAlB,GAAsC,KAAKC,KAAL,CAAWG,KAAX,EAAtC;AACD,OAFD;AAGD,KAlB6B;AAAA;;AAM9BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWK,gBAAX,CAA4B,OAA5B,EAAqC,MAAM,KAAKH,QAAL,CAAc;AAAEH,MAAAA,IAAI,EAAE;AAAR,KAAd,CAA3C;AACD;;AAEDO,EAAAA,oBAAoB,GAAG;AACrB,SAAKN,KAAL,CAAWO,mBAAX,CAA+B,OAA/B,EAAwC,MAAM,KAAKL,QAAL,CAAc;AAAEH,MAAAA,IAAI,EAAE;AAAR,KAAd,CAA9C;AACD;;AAODJ,EAAAA,MAAM,GAAE;AACN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKa,KAAL,CAAWR,KAAX,CAAiBS,UADtB,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKR,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKH,KAAL,CAAWC,IAAX,GAAkB,OAAlB,GAA4B,MAA/D,CAFJ,CADJ;AAMD;;AA1B6B;;AA4BpC,eAAeH,KAAf","sourcesContent":["import React from 'react'\r\nimport { render } from '@testing-library/react';\r\n\r\nclass Audio extends React.Component {\r\n    state = {\r\n        play: false\r\n      }\r\n      audio = new Audio()\r\n    \r\n      componentDidMount() {\r\n        this.audio.addEventListener('ended', () => this.setState({ play: false }));\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        this.audio.removeEventListener('ended', () => this.setState({ play: false }));  \r\n      }\r\n    \r\n      togglePlay = () => {\r\n        this.setState({ play: !this.state.play }, () => {\r\n          this.state.play ? this.audio.play() : this.audio.pause();\r\n        });\r\n      }\r\n      render(){\r\n        return (\r\n            <div>\r\n                {this.props.audio.previewURL}\r\n                <button onClick={this.togglePlay}>{this.state.play ? 'Pause' : 'Play'}</button>\r\n            </div>\r\n        );\r\n      }\r\n}\r\nexport default Audio;"]},"metadata":{},"sourceType":"module"}